name: Build Test Push Docker images to Dockerhub

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Steps to build, test, and push FastAPI image
    - name: Build FastAPI Docker image
      run: docker build . -f Dockerfile.fastapi -t ${{ secrets.DOCKER_USERNAME }}/tld-app:latest

    - name: Test FastAPI Docker image
      run: docker run --env API_TOKEN=${{ secrets.API_TOKEN }} ${{ secrets.DOCKER_USERNAME }}/tld-app:latest pytest -s

    - name: Push FastAPI Docker image to Docker Hub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/tld-app:latest

    - name: Build Gradio Docker image
      run: docker build . -f Dockerfile.gradio -t ${{ secrets.DOCKER_USERNAME }}/gradio-app:latest

    # Optional: Add a step to test Gradio Docker image
    # - name: Test Gradio Docker image
    #   run: docker run --env API_URL=http://your_api_url ${{ secrets.DOCKER_USERNAME }}/gradio-app:latest

    - name: Push Gradio Docker image to Docker Hub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/gradio-app:latest

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}


    - name: Set up Docker Compose Deployment
      run: |
        az webapp config container set --name transformer-diffusion \
                                       --resource-group transformer-diffusion \
                                       --multicontainer-config-type compose \
                                       --multicontainer-config-file docker-compose.yml

    - name: Set API_TOKEN in Azure App Service Settings
      run: |
        az webapp config appsettings set --name transformer-diffusion \
                                     --resource-group transformer-diffusion \
                                     --settings API_TOKEN=${{ secrets.API_TOKEN }}
